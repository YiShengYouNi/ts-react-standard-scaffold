openapi: 3.0.3
info:
  title: Order Service API
  version: 1.0.0
  description: 基本的订单服务定义，用于前端本地 DTO 生成与联调模拟。
servers:
  - url: http://localhost:8787
    description: Local dev server (可选，不影响 DTO 生成)

tags:
  - name: Orders
    description: 订单相关接口

paths:
  /orders:
    get:
      summary: 分页查询订单
      tags: [Orders]
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - name: status
          in: query
          description: 订单状态过滤
          required: false
          schema:
            $ref: '#/components/schemas/OrderStatus'
        - name: q
          in: query
          description: 模糊搜索（订单号/客户名）
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
              examples:
                ok:
                  value:
                    items:
                      - id: 1001
                        code: "SO-2025-0001"
                        status: PENDING
                        total: 199.9
                        createdAt: "2025-08-01T10:00:00Z"
                    page: 1
                    pageSize: 20
                    total: 1
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
    post:
      summary: 创建订单
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
            examples:
              sample:
                value:
                  customerId: 501
                  items:
                    - sku: "SKU-10001"
                      name: "Keyboard"
                      price: 99.9
                      qty: 2
      responses:
        '201':
          description: 已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }

  /orders/{id}:
    get:
      summary: 获取订单详情
      tags: [Orders]
      parameters:
        - $ref: '#/components/parameters/OrderId'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404': { $ref: '#/components/responses/NotFound' }
        '401': { $ref: '#/components/responses/Unauthorized' }
    patch:
      summary: 更新订单（仅限部分字段）
      tags: [Orders]
      parameters:
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
            examples:
              statusOnly:
                value:
                  status: APPROVED
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '404': { $ref: '#/components/responses/NotFound' }
    delete:
      summary: 删除订单
      tags: [Orders]
      parameters:
        - $ref: '#/components/parameters/OrderId'
      responses:
        '204':
          description: 已删除
        '404': { $ref: '#/components/responses/NotFound' }
        '401': { $ref: '#/components/responses/Unauthorized' }

  /orders/{id}/approve:
    post:
      summary: 审批通过订单
      tags: [Orders]
      parameters:
        - $ref: '#/components/parameters/OrderId'
      responses:
        '200':
          description: 审批后返回订单
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400': { $ref: '#/components/responses/BadRequest' }
        '404': { $ref: '#/components/responses/NotFound' }
        '401': { $ref: '#/components/responses/Unauthorized' }

components:
  parameters:
    OrderId:
      name: id
      in: path
      required: true
      description: 订单 ID
      schema:
        type: integer
        format: int64
        minimum: 1
    Page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    PageSize:
      name: pageSize
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 200
        default: 20

  responses:
    BadRequest:
      description: 参数错误
      content:
        application/json:
          schema: { $ref: '#/components/schemas/Error' }
          examples:
            bad:
              value: { code: "BAD_REQUEST", message: "invalid parameter" }
    Unauthorized:
      description: 未授权
      content:
        application/json:
          schema: { $ref: '#/components/schemas/Error' }
          examples:
            unauth:
              value: { code: "UNAUTHORIZED", message: "unauthorized" }
    NotFound:
      description: 资源不存在
      content:
        application/json:
          schema: { $ref: '#/components/schemas/Error' }
          examples:
            missing:
              value: { code: "NOT_FOUND", message: "order not found" }

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        code: { type: string }
        message: { type: string }
      required: [code, message]

    OrderStatus:
      type: string
      enum: [PENDING, APPROVED, REJECTED, CANCELLED]
      description: 订单状态

    Money:
      type: number
      format: float
      minimum: 0

    OrderItem:
      type: object
      properties:
        sku: { type: string }
        name: { type: string }
        price: { $ref: '#/components/schemas/Money' }
        qty:
          type: integer
          format: int32
          minimum: 1
      required: [sku, name, price, qty]

    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1001
        code:
          type: string
          example: "SO-2025-0001"
        status:
          $ref: '#/components/schemas/OrderStatus'
        customerId:
          type: integer
          format: int64
          example: 501
        total:
          $ref: '#/components/schemas/Money'
        createdAt:
          type: string
          format: date-time
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      required: [id, code, status, customerId, total, createdAt, items]

    OrderSummary:
      type: object
      properties:
        id: { type: integer, format: int64 }
        code: { type: string }
        status: { $ref: '#/components/schemas/OrderStatus' }
        total: { $ref: '#/components/schemas/Money' }
        createdAt: { type: string, format: date-time }
      required: [id, code, status, total, createdAt]

    OrderList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderSummary'
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
      required: [items, page, pageSize, total]

    CreateOrderRequest:
      type: object
      properties:
        customerId:
          type: integer
          format: int64
        items:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItem'
      required: [customerId, items]

    UpdateOrderRequest:
      type: object
      description: 订单的部分更新，目前仅支持状态更新
      properties:
        status:
          $ref: '#/components/schemas/OrderStatus'
      required: [status]
